spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/patient_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: patient-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

  # RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379

  # Security (Basic for now - we'll enhance later)
  security:
    user:
      name: admin
      password: admin

# Kafka Topics
kafka:
  topics:
    patient-events: patient.events

# RabbitMQ Queues
rabbitmq:
  queues:
    notification: notification.email.queue
  exchanges:
    notification: notification.exchange
  routing-keys:
    notification: notification.email

logging:
  level:
    com.hospital.patient: DEBUG
    org.springframework.kafka: INFO
    org.springframework.amqp: INFO